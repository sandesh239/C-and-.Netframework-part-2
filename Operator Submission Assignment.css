using System;

namespace EmployeeComparisonApp
{
    // Define the Employee class
    public class Employee
    {
        // Properties for Employee Id, FirstName, and LastName
        public int Id { get; set; }
        public string FirstName { get; set; }
        public string LastName { get; set; }

        // Overload the "==" operator to compare two Employee objects by Id
        public static bool operator ==(Employee emp1, Employee emp2)
        {
            // Check for null values before comparing Ids
            if (ReferenceEquals(emp1, null) || ReferenceEquals(emp2, null))
                return ReferenceEquals(emp1, emp2);

            return emp1.Id == emp2.Id;
        }

        // Overload the "!=" operator to compare two Employee objects by Id
        public static bool operator !=(Employee emp1, Employee emp2)
        {
            // Return the opposite of the "==" operator
            return !(emp1 == emp2);
        }

        // Override Equals method to match operator overloads
        public override bool Equals(object obj)
        {
            // Return false if the object is not an Employee
            if (obj == null || GetType() != obj.GetType())
                return false;

            // Cast the object to Employee and compare Ids
            Employee emp = (Employee)obj;
            return Id == emp.Id;
        }

        // Override GetHashCode method for consistency
        public override int GetHashCode()
        {
            return Id.GetHashCode();
        }
    }

    class Program
    {
        // Main method, the entry point of the console application
        static void Main(string[] args)
        {
            // Instantiate the first Employee object and set its properties
            Employee employee1 = new Employee
            {
                Id = 1,
                FirstName = "John",
                LastName = "Doe"
            };

            // Instantiate the second Employee object and set its properties
            Employee employee2 = new Employee
            {
                Id = 1, // Same Id as employee1 to test equality
                FirstName = "Jane",
                LastName = "Smith"
            };

            // Compare the two Employee objects using the overloaded "==" operator
            if (employee1 == employee2)
            {
                Console.WriteLine("The two employees are considered equal based on their Id.");
            }
            else
            {
                Console.WriteLine("The two employees are not equal.");
            }

            // Compare the two Employee objects using the overloaded "!=" operator
            if (employee1 != employee2)
            {
                Console.WriteLine("The two employees are considered not equal.");
            }
            else
            {
                Console.WriteLine("The two employees are equal based on their Id.");
            }

            // Wait for user input before closing the console window
            Console.ReadLine();
        }
    }
}
